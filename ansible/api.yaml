---
- hosts: os_metadata_my_server_role=api
  become: true

  vars_files:
    - ../terraform/tf_ansible_vars.yaml
    - paths.yaml
    - private.yaml

  vars:
    # Repository
    api_repo: Project-Lavinia/Lavinia-api

    # Security
    security_sudoers_passwordless:
      - centos

    # Domains
    api_endpoint: "{{ inventory_hostname + '.' + zone_name }}"

    # API endpoint
    api_http_port: 5000
    api_hostname: localhost
    api_ip: 127.0.0.1
    api_local: "{{ api_hostname + ':' + api_http_port|string }}"
    api_ip_addr: "{{ api_ip + ':' + api_http_port|string }}"

    # Certbot/Let's Encrypt
    certbot_install_from_source: false
    certbot_pkg_mgr: dnf
    certbot_admin_email: "{{ letsencrypt_email }}"
    certbot_create_if_missing: true
    certbot_certs:
      - domains:
        - "{{ api_endpoint }}"


  pre_tasks:
    - name: Ensure Terraform variables have been imported
      assert:
        that:
          - zone_name is defined

    - name: Ensure paths variables have been imported
      assert:
        that:
          - netcore_path is defined

    - name: Ensure private variables have been imported
      assert:
        that:
          - letsencrypt_email is defined

    - name: Add EPEL repository
      dnf:
        name: epel-release
        state: latest

    - name: Upgrade system
      dnf:
        name: "*"
        state: latest
    
    - name: Install .Net Core
      dnf:
        name: dotnet-sdk-3.1
        state: latest
      
    - name: Create .Net Core directory
      file:
        name: "{{ netcore_path }}"
        owner: centos
        mode: 0755
        state: directory
        recurse: yes
    
    - name: Setup API service
      template:
        src: templates/api.service.j2
        dest: /etc/systemd/system/api.service
      notify: Refresh API service

    - name: Add additional SSH keys
      authorized_key:
        user: centos
        state: present
        key: "{{ lookup('file', '~/.ssh/jenkins/id_rsa.pub') }}"

    - name: Enable httpd_can_network_connect
      seboolean:
        name: httpd_can_network_connect
        persistent: yes
        state: yes

  roles:
    - role: geerlingguy.security
    - role: dev-sec.ssh-hardening
    - role: geerlingguy.git
    - role: certbot
  
  tasks:
    - name: Install unzip
      dnf:
        name: unzip
        state: latest

    - name: Check if .Net Core directory is empty
      find:
        paths: "{{ netcore_path }}/"
      register: filesFound
    
    - name: Get latest release link
      when: filesFound.matched == 0
      command: 'curl -s https://api.github.com/repos/{{ api_repo }}/releases/latest \
                | grep "browser_download_url.*zip" \
                | cut -d : -f 2,3 \
                | tr -d \"'
      register: releaseUrl

    - name: Download latest release
      when: filesFound.matched == 0
      unarchive:
        remote_src: yes
        src: "{{ releaseUrl }}"
        dest: "{{ netcore_path }}/"
    
    - name: Start API service
      service:
        name: api
        enabled: true
        state: started
      
    - name: Install Nginx
      dnf:
        name: nginx
        state: latest
    
    - name: Template Nginx config
      template:
        src: templates/api.conf.j2
        dest: /etc/nginx/nginx.conf
      notify: Restart Nginx
    
    - name: Harden Nginx
      include_role:
        name: dev-sec.nginx-hardening
    
    - name: Force custom Content Security Policy
      lineinfile:
        path: /etc/nginx/conf.d/90.hardening.conf
        state: absent
        regexp: 'Content-Security-Policy'

    - name: Start Nginx
      service:
        name: nginx
        enabled: true
        state: started

  handlers:
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted
    
    - name: Refresh API service
      systemd:
        daemon_reload: yes
        name: api
        enabled: yes
        state: restarted
      