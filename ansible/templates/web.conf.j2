user {{ nginx_user }};
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main_ext  '$remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      '"$host" sn="$server_name" '
                      'rt=$request_time '
                      'ua="$upstream_addr" us="$upstream_status" '
                      'ut="$upstream_response_time" ul="$upstream_response_length" '
                      'cs=$upstream_cache_status';

    access_log /var/log/nginx/access.log main_ext;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;
    add_header        Content-Security-Policy "script-src 'self' 'unsafe-inline' kit.fontawesome.com; object-src 'self'";

    server {
        server_name {{ web_endpoint }};

        listen 443 ssl;
        ssl_certificate     /etc/letsencrypt/live/{{ web_endpoint }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ web_endpoint }}/privkey.pem;

        root {{ web_root }};
        index index.html;

        location / {
            try_files $uri /index.html =404;
        }
    }

    server {
        server_name {{ web_endpoint }};
        listen 80;

        return 301 https://$host$request_uri;
    }
}
