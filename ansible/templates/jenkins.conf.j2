user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main_ext  '[$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" '
                      '"$host" sn="$server_name" '
                      'rt=$request_time '
                      'ua="$upstream_addr" us="$upstream_status" '
                      'ut="$upstream_response_time" ul="$upstream_response_length" '
                      'cs=$upstream_cache_status';

    access_log /var/log/nginx/access.log main_ext;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        server_name {{ jenkins_endpoint }};
        listen 443 ssl;
        ssl_certificate     /etc/letsencrypt/live/{{ jenkins_endpoint }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ jenkins_endpoint }}/privkey.pem;

        location / {
            proxy_set_header        Host $host:$server_port;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
            proxy_redirect          http:// https://;
            proxy_pass              http://jenkins;

            proxy_read_timeout 90s;
            proxy_http_version 1.1;
            proxy_request_buffering off;
            proxy_buffering off;
            proxy_redirect http://{{ jenkins_local }} https://{{ jenkins_endpoint }};
        }
    }

    server {
        server_name {{ jenkins_endpoint }};
        listen 80;

        return 301 https://$host$request_uri;
    }


    upstream jenkins {
       server {{ jenkins_ip_addr }} fail_timeout=0;
    }
}
