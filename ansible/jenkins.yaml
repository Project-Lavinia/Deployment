---
- hosts: os_metadata_my_server_role=jenkins
  become: true

  vars_files:
    - ../terraform/tf_ansible_vars.yaml
    - private.yaml

  vars:
    # Security
    security_sudoers_passwordless:
      - centos

    # Domains
    jenkins_endpoint: "{{ inventory_hostname + '.' + zone_name }}"

    # Jenkins
    jenkins_http_port: 8080
    jenkins_hostname: localhost
    jenkins_ip: 127.0.0.1
    jenkins_local: "{{ jenkins_hostname + ':' + jenkins_http_port|string }}"
    jenkins_ip_addr: "{{ jenkins_ip + ':' + jenkins_http_port|string }}"
    jenkins_package_state: latest
    jenkins_plugins_state: latest
    jenkins_home: /storage/jenkins
    java_packages:
      - java-1.8.0-openjdk
    
    # Certbot/Let's Encrypt
    certbot_install_from_source: false
    certbot_pkg_mgr: dnf
    certbot_admin_email: "{{ letsencrypt_email }}"
    certbot_create_if_missing: true
    certbot_certs:
      - domains:
        - "{{ jenkins_endpoint }}"


  pre_tasks:
    - name: Ensure Terraform variables have been imported
      assert:
        that:
          - zone_name is defined

    - name: Ensure private variables have been imported
      assert:
        that:
          - letsencrypt_email is defined

    - name: Add EPEL repository
      dnf:
        name: epel-release
        state: latest

    - name: Upgrade system
      dnf:
        name: "*"
        state: latest

    - name: Create a filesystem on /dev/sdb
      filesystem:
        fstype: ext4
        dev: /dev/sdb

    - name: Mount volume
      mount:
        path: /storage
        src: /dev/sdb
        fstype: ext4
        state: mounted
    
    - name: Enable httpd_can_network_connect
      seboolean:
        name: httpd_can_network_connect
        persistent: yes
        state: yes

  roles:
    - role: geerlingguy.security
    - role: dev-sec.ssh-hardening
    - role: geerlingguy.git
    - role: geerlingguy.java
    - role: geerlingguy.jenkins
    - role: certbot
  
  tasks:
    - name: Install Nginx
      dnf:
        name: nginx
        state: latest
    
    - name: Template Nginx config
      template:
        src: templates/jenkins.conf.j2
        dest: /etc/nginx/nginx.conf
      notify: Restart Nginx
    
    - name: Start Nginx
      service:
        name: nginx
        enabled: true
        state: started

  handlers:
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted