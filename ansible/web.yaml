---
  - hosts: os_metadata_my_server_role=web
    become: true
  
    vars_files:
      - ../terraform/tf_ansible_vars.yaml
      - private.yaml
      - paths.yaml
  
    vars:
      # Web
      nginx_user: nginx

      # Security
      sftp_enabled: true
      security_sudoers_passwordless:
        - centos
  
      # Domains
      web_endpoint: "{{ inventory_hostname + '.' + zone_name }}"
      
      # Certbot/Let's Encrypt
      certbot_install_from_source: false
      certbot_pkg_mgr: dnf
      certbot_admin_email: "{{ letsencrypt_email }}"
      certbot_create_if_missing: true
      certbot_certs:
        - domains:
          - "{{ web_endpoint }}"
  
  
    pre_tasks:
      - name: Ensure Terraform variables have been imported
        assert:
          that:
            - zone_name is defined

      - name: Ensure path variables have been imported
        assert:
          that:
            - web_root is defined
  
      - name: Ensure private variables have been imported
        assert:
          that:
            - letsencrypt_email is defined
  
      - name: Add EPEL repository
        dnf:
          name: epel-release
          state: latest
  
      - name: Upgrade system
        dnf:
          name: "*"
          state: latest
      
      - name: Create web root
        file:
          name: "{{ web_root }}"
          owner: centos
          mode: 0755
          state: directory
          recurse: yes
      
      - name: Allow Nginx to serve web root
        command: sudo chcon -R -t httpd_sys_content_t "{{ web_root }}"
    
      - name: Enable httpd_can_network_connect
        seboolean:
          name: httpd_can_network_connect
          persistent: yes
          state: yes
  
    roles:
      - role: geerlingguy.security
      - role: dev-sec.ssh-hardening
      - role: geerlingguy.git
      - role: certbot
    
    tasks:
      - name: Install Nginx
        dnf:
          name: nginx
          state: latest
      
      - name: Template Nginx config
        template:
          src: templates/web.conf.j2
          dest: /etc/nginx/nginx.conf
        notify: Restart Nginx
      
      - name: Harden Nginx
        include_role:
          name: dev-sec.nginx-hardening
    
      - name: Force custom Content Security Policy
        lineinfile:
          path: /etc/nginx/conf.d/90.hardening.conf
          state: absent
          regexp: 'Content-Security-Policy'
      
      - name: Start Nginx
        service:
          name: nginx
          enabled: true
          state: started
  
    handlers:
      - name: Restart Nginx
        service:
          name: nginx
          state: restarted